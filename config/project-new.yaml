defaults:
  variables:
    # Version of the practical guide (added to all releases)
    version: "v2021-01-12"

  # File name used for build targets
  target_filename: "S3-practical-guide"

  source: content/src
  structure: content/structure-new.yaml
  localization: content/localization.po

  # glossary: yaml file with glossary terms
  glossary: content/glossary.yaml
  # glossary-items: number of glossary items per page (used for deckset and revealjs)
  glossary-items: 20
  # glossary-style: plain:glossary style for ebook builder (plain(default)|footnotes|underline)
  glossary-style: plain

  # TODO: update the make conf file from translations
  # target::Target file (for reveal.js and deckset) or folder (for wordpress or jekyll).
  target: "" 
  # template: The template to use (deckset, revealjs, and jekyll output)
  template: ""
  # the target format (html, markdown, latex)
  target_format: ""

presets:
  jekyll:
    renderer: jekyll
    target_format: html
    variables:
      # Language and text direction for Jekyll site
      html_language: "en"
      html_dir: "ltr"
      # CNAME for GitHub-Page
      microsite_cname: "patterns.sociocracy30.org"
      # URL o the Github project
      github_url: "https://github.com/S3-working-group/s3-practical-guide"
      # URL of the website
      site_url: "https://patterns.sociocracy30.org"

    # build content files
    target: docs-new/ 

    templates: 
      - source: content/website/_templates/index.md
        destination: docs/index.md
        mode: markdown
      - source: templates/website/_layouts/default.html
        destination: docs/_layouts/default.html
      - source: templates/website/_layouts/plain.html
        destination: docs/_layouts/plain.html
      - source: templates/website/_config.yml
        destination: docs/_config.yml
      - source: templates/website/CNAME
        destination: docs/CNAME
      - source: content/website/_includes/footer.html
        destination: docs/_includes/footer.html
      - source: templates/website/pattern-map.html
        destination: docs/_includes/pattern-map.html
      - source: templates/website/map.md
        destination: docs/map.md
        mode: copy
      - source: content/website/_includes/header.html
        destination: docs/_includes/header.html
        mode: copy
      - source: content/website/_templates/404.md
        destination: docs/404.md
        mode: copy

  single-jekyll-page:
    renderer: ebook
    template: templates/single-page--master.md
    target: docs/all-new.md
    # - source: templates/single-page--master.md tmp/ebook/single-page--master.md

  epub:
    target: tmp/ebook/
    target_format: html
    templates:     # prepare and copy template
      - source: templates/epub--master.md 
        destination: tmp/ebook/epub--master.md
    # transclude all to one file 
    # cd tmp/ebook; multimarkdown --to=mmd --output=epub-compiled.md epub--master.md
    # render to epub
    # cd tmp/ebook; pandoc epub-compiled.md -f markdown -t epub3 --toc --toc-depth=3 -s -o ../../$(TARGETFILE).epub

  supporter-epub:
    # render epub for supporter edition

    # render intro, chapters and appendix to separate md files
    # mdslides build ebook content/structure-supporter-edition.yaml $(SOURCE) tmp/supporter-epub/ --glossary=$(GLOSSARY) --section-prefix="$(SECTIONPREFIX)"
    target: tmp/supporter-epub/


    # prepare and copy template, metadata, CSS and cover
    templates:
      - source: templates/supporter-epub/master.md
        destination: tmp/supporter-epub/master.md
      - source: templates/supporter-epub/metadata.yaml
        destination: tmp/supporter-epub/metadata.yaml
      # those were just copied
      - source: templates/epub.css
        destination: tmp/supporter-epub/epub.css
      - source: templates/covers/s3-practical-guide-cover-supporter-edition-70dpi.png
        destination: tmp/supporter-epub/cover.png

    # pandoc content/src/introduction/s3-overview-supporter-edition.md -f markdown_mmd -t html -o tmp/supporter-epub/description.html
    #cd tmp/supporter-epub; tr -d "\n" <description.html >description-one-line.html
    #cd tmp/supporter-epub; awk 'BEGIN{RS = "\n\n+" getline l < "description-one-line.html"}/htmldescription/{gsub("htmldescription",l)}1' metadata.yaml >metadata-full.yaml

    # transclude all to one file (rendering to html or mmd yields exactly the same epub)
    #cd tmp/supporter-epub; multimarkdown --to=mmd --output=epub-compiled.md master.md
    # make epub via pandoc
    #cd tmp/supporter-epub; pandoc epub-compiled.md -f markdown --metadata-file=metadata-full.yaml -t epub3 --toc --toc-depth=3 -s -o ../../$(TARGETFILE)-supporter-edition.epub

  ebook:
    renderer: ebook
    target_format: latex
    # render intro, chapters and appendix to separate md files (but without sectionprefix!)
    # mdslides build ebook $(CONFIG) $(SOURCE) tmp/ebook/ --glossary=$(GLOSSARY) --no-section-prefix
    target: tmp/ebook/
    no-section-prefix: True

    # copy md and LaTEX templates
    templates:
      - source: templates/ebook--master.md
        destination: tmp/ebook/ebook--master.md
      - source: config/ebook.tex
        destination: tmp/ebook/ebook.tex
      - source: config/ebook-style.sty
        destination: tmp/ebook/ebook-style.sty

    # make an index
    #slides index latex $(CONFIG) tmp/ebook/tmp-index.md
    # transclude all to one file
    # cd tmp/ebook; multimarkdown --to=mmd --output=tmp-ebook-compiled.md ebook--master.md

    # cd tmp/ebook; multimarkdown --to=latex --output=tmp-ebook-compiled.tex tmp-ebook-compiled.md
    # cd tmp/ebook; latexmk -pdf -xelatex -silent ebook.tex 

    # merge with cover
    # cd tmp/ebook; gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=merged.pdf ../../templates/ebook-cover.pdf ebook.pdf

    # cd tmp/ebook; mv merged.pdf ../../$(TARGETFILE).pdf
    
    # clean up
    # cd tmp/ebook; latexmk -C

  gitbook:
    renderer: gitbook
    target: gitbook/

  revealjs:
    renderer: revealjs
    # reveal.js config option for RTL languages
    revealjs_rtl: "false"